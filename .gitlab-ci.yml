default:
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY

variables:
  CI_POETRY_VERSION: "1.8.4"
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - lint
  - build
  - test
  - pages
  - publish
  - scan

ansible-lint:
  stage: lint
  tags:
    - ${SKA_DEFAULT_RUNNER}
  before_script:
    - |
      if [[ -n $CI_POETRY_VERSION ]] && [[ $(poetry --version) != *$CI_POETRY_VERSION* ]]; then
        echo "docs-build: Updating poetry to $CI_POETRY_VERSION";
        pipx uninstall poetry && pipx install poetry==$CI_POETRY_VERSION;
      fi;
    - poetry config virtualenvs.create true
    - poetry config virtualenvs.in-project true
    - time poetry install --only ansible --no-root
  script:
    - poetry run make ansible-lint

include:
  - project: ska-telescope/templates-repository
    file:
      - gitlab-ci/includes/docs.gitlab-ci.yml
      - gitlab-ci/includes/finaliser.gitlab-ci.yml
      - gitlab-ci/includes/python.gitlab-ci.yml
      - gitlab-ci/includes/release.gitlab-ci.yml

# Overriding the before_script of these jobs because it chooses to run 'poetry install'
# with the '--no-root' flag, which breaks the version detection in docs/src/conf.py.
docs-build:
  before_script:
    - |
      if [[ -n $CI_POETRY_VERSION ]] && [[ $(poetry --version) != *$CI_POETRY_VERSION* ]]; then
        echo "docs-build: Updating poetry to $CI_POETRY_VERSION";
        pipx uninstall poetry && pipx install poetry==$CI_POETRY_VERSION;
      fi;
    - poetry config virtualenvs.create false
    - time poetry install --only main,docs

pages:
  before_script:
    - |
      if [[ -n $CI_POETRY_VERSION ]] && [[ $(poetry --version) != *$CI_POETRY_VERSION* ]]; then
        echo "docs-build: Updating poetry to $CI_POETRY_VERSION";
        pipx uninstall poetry && pipx install poetry==$CI_POETRY_VERSION;
      fi;
    - poetry config virtualenvs.create false
    - time poetry install --only main,docs
